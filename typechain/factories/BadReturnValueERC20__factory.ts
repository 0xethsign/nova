/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BadReturnValueERC20,
  BadReturnValueERC20Interface,
} from "../BadReturnValueERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610140806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323b872dd14610030575b600080fd5b6100736004803603606081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356100e8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100ad578181015183820152602001610095565b50505050905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060405180606001604052806028815260200161010c6028913994935050505056fe74686973206973206e6f742061206e6f726d616c2045524332302072657475726e2076616c756521a164736f6c6343000706000a";

export class BadReturnValueERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadReturnValueERC20> {
    return super.deploy(overrides || {}) as Promise<BadReturnValueERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BadReturnValueERC20 {
    return super.attach(address) as BadReturnValueERC20;
  }
  connect(signer: Signer): BadReturnValueERC20__factory {
    return super.connect(signer) as BadReturnValueERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadReturnValueERC20Interface {
    return new utils.Interface(_abi) as BadReturnValueERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadReturnValueERC20 {
    return new Contract(address, _abi, signerOrProvider) as BadReturnValueERC20;
  }
}
