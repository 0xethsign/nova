/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvilExternalContract,
  EvilExternalContractInterface,
} from "../EvilExternalContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tryToStealRelayerTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610108806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063eaeecc7214602d575b600080fd5b606d60048036036060811015604157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135606f565b005b8273ffffffffffffffffffffffffffffffffffffffff16633996e60a83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801560df57600080fd5b505af115801560f2573d6000803e3d6000fd5b5050505050505056fea164736f6c6343000706000a";

export class EvilExternalContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvilExternalContract> {
    return super.deploy(overrides || {}) as Promise<EvilExternalContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EvilExternalContract {
    return super.attach(address) as EvilExternalContract;
  }
  connect(signer: Signer): EvilExternalContract__factory {
    return super.connect(signer) as EvilExternalContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvilExternalContractInterface {
    return new utils.Interface(_abi) as EvilExternalContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvilExternalContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EvilExternalContract;
  }
}
